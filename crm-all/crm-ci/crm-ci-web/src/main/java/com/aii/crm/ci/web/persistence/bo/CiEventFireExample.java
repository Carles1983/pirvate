package com.aii.crm.ci.web.persistence.bo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CiEventFireExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public CiEventFireExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEventFireIdIsNull() {
            addCriterion("EVENT_FIRE_ID is null");
            return (Criteria) this;
        }

        public Criteria andEventFireIdIsNotNull() {
            addCriterion("EVENT_FIRE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andEventFireIdEqualTo(Long value) {
            addCriterion("EVENT_FIRE_ID =", value, "eventFireId");
            return (Criteria) this;
        }

        public Criteria andEventFireIdNotEqualTo(Long value) {
            addCriterion("EVENT_FIRE_ID <>", value, "eventFireId");
            return (Criteria) this;
        }

        public Criteria andEventFireIdGreaterThan(Long value) {
            addCriterion("EVENT_FIRE_ID >", value, "eventFireId");
            return (Criteria) this;
        }

        public Criteria andEventFireIdGreaterThanOrEqualTo(Long value) {
            addCriterion("EVENT_FIRE_ID >=", value, "eventFireId");
            return (Criteria) this;
        }

        public Criteria andEventFireIdLessThan(Long value) {
            addCriterion("EVENT_FIRE_ID <", value, "eventFireId");
            return (Criteria) this;
        }

        public Criteria andEventFireIdLessThanOrEqualTo(Long value) {
            addCriterion("EVENT_FIRE_ID <=", value, "eventFireId");
            return (Criteria) this;
        }

        public Criteria andEventFireIdIn(List<Long> values) {
            addCriterion("EVENT_FIRE_ID in", values, "eventFireId");
            return (Criteria) this;
        }

        public Criteria andEventFireIdNotIn(List<Long> values) {
            addCriterion("EVENT_FIRE_ID not in", values, "eventFireId");
            return (Criteria) this;
        }

        public Criteria andEventFireIdBetween(Long value1, Long value2) {
            addCriterion("EVENT_FIRE_ID between", value1, value2, "eventFireId");
            return (Criteria) this;
        }

        public Criteria andEventFireIdNotBetween(Long value1, Long value2) {
            addCriterion("EVENT_FIRE_ID not between", value1, value2, "eventFireId");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdIsNull() {
            addCriterion("INTERACTION_TYPE_ID is null");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdIsNotNull() {
            addCriterion("INTERACTION_TYPE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdEqualTo(Long value) {
            addCriterion("INTERACTION_TYPE_ID =", value, "interactionTypeId");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdNotEqualTo(Long value) {
            addCriterion("INTERACTION_TYPE_ID <>", value, "interactionTypeId");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdGreaterThan(Long value) {
            addCriterion("INTERACTION_TYPE_ID >", value, "interactionTypeId");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdGreaterThanOrEqualTo(Long value) {
            addCriterion("INTERACTION_TYPE_ID >=", value, "interactionTypeId");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdLessThan(Long value) {
            addCriterion("INTERACTION_TYPE_ID <", value, "interactionTypeId");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdLessThanOrEqualTo(Long value) {
            addCriterion("INTERACTION_TYPE_ID <=", value, "interactionTypeId");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdIn(List<Long> values) {
            addCriterion("INTERACTION_TYPE_ID in", values, "interactionTypeId");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdNotIn(List<Long> values) {
            addCriterion("INTERACTION_TYPE_ID not in", values, "interactionTypeId");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdBetween(Long value1, Long value2) {
            addCriterion("INTERACTION_TYPE_ID between", value1, value2, "interactionTypeId");
            return (Criteria) this;
        }

        public Criteria andInteractionTypeIdNotBetween(Long value1, Long value2) {
            addCriterion("INTERACTION_TYPE_ID not between", value1, value2, "interactionTypeId");
            return (Criteria) this;
        }

        public Criteria andChannelIdIsNull() {
            addCriterion("CHANNEL_ID is null");
            return (Criteria) this;
        }

        public Criteria andChannelIdIsNotNull() {
            addCriterion("CHANNEL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andChannelIdEqualTo(Long value) {
            addCriterion("CHANNEL_ID =", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdNotEqualTo(Long value) {
            addCriterion("CHANNEL_ID <>", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdGreaterThan(Long value) {
            addCriterion("CHANNEL_ID >", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdGreaterThanOrEqualTo(Long value) {
            addCriterion("CHANNEL_ID >=", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdLessThan(Long value) {
            addCriterion("CHANNEL_ID <", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdLessThanOrEqualTo(Long value) {
            addCriterion("CHANNEL_ID <=", value, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdIn(List<Long> values) {
            addCriterion("CHANNEL_ID in", values, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdNotIn(List<Long> values) {
            addCriterion("CHANNEL_ID not in", values, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdBetween(Long value1, Long value2) {
            addCriterion("CHANNEL_ID between", value1, value2, "channelId");
            return (Criteria) this;
        }

        public Criteria andChannelIdNotBetween(Long value1, Long value2) {
            addCriterion("CHANNEL_ID not between", value1, value2, "channelId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("TENANT_ID is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("TENANT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(String value) {
            addCriterion("TENANT_ID =", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(String value) {
            addCriterion("TENANT_ID <>", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(String value) {
            addCriterion("TENANT_ID >", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(String value) {
            addCriterion("TENANT_ID >=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(String value) {
            addCriterion("TENANT_ID <", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(String value) {
            addCriterion("TENANT_ID <=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLike(String value) {
            addCriterion("TENANT_ID like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotLike(String value) {
            addCriterion("TENANT_ID not like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<String> values) {
            addCriterion("TENANT_ID in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<String> values) {
            addCriterion("TENANT_ID not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(String value1, String value2) {
            addCriterion("TENANT_ID between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(String value1, String value2) {
            addCriterion("TENANT_ID not between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andSwitchStateIsNull() {
            addCriterion("SWITCH_STATE is null");
            return (Criteria) this;
        }

        public Criteria andSwitchStateIsNotNull() {
            addCriterion("SWITCH_STATE is not null");
            return (Criteria) this;
        }

        public Criteria andSwitchStateEqualTo(Long value) {
            addCriterion("SWITCH_STATE =", value, "switchState");
            return (Criteria) this;
        }

        public Criteria andSwitchStateNotEqualTo(Long value) {
            addCriterion("SWITCH_STATE <>", value, "switchState");
            return (Criteria) this;
        }

        public Criteria andSwitchStateGreaterThan(Long value) {
            addCriterion("SWITCH_STATE >", value, "switchState");
            return (Criteria) this;
        }

        public Criteria andSwitchStateGreaterThanOrEqualTo(Long value) {
            addCriterion("SWITCH_STATE >=", value, "switchState");
            return (Criteria) this;
        }

        public Criteria andSwitchStateLessThan(Long value) {
            addCriterion("SWITCH_STATE <", value, "switchState");
            return (Criteria) this;
        }

        public Criteria andSwitchStateLessThanOrEqualTo(Long value) {
            addCriterion("SWITCH_STATE <=", value, "switchState");
            return (Criteria) this;
        }

        public Criteria andSwitchStateIn(List<Long> values) {
            addCriterion("SWITCH_STATE in", values, "switchState");
            return (Criteria) this;
        }

        public Criteria andSwitchStateNotIn(List<Long> values) {
            addCriterion("SWITCH_STATE not in", values, "switchState");
            return (Criteria) this;
        }

        public Criteria andSwitchStateBetween(Long value1, Long value2) {
            addCriterion("SWITCH_STATE between", value1, value2, "switchState");
            return (Criteria) this;
        }

        public Criteria andSwitchStateNotBetween(Long value1, Long value2) {
            addCriterion("SWITCH_STATE not between", value1, value2, "switchState");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeIsNull() {
            addCriterion("SWITCH_TIME is null");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeIsNotNull() {
            addCriterion("SWITCH_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeEqualTo(Date value) {
            addCriterion("SWITCH_TIME =", value, "switchTime");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeNotEqualTo(Date value) {
            addCriterion("SWITCH_TIME <>", value, "switchTime");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeGreaterThan(Date value) {
            addCriterion("SWITCH_TIME >", value, "switchTime");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("SWITCH_TIME >=", value, "switchTime");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeLessThan(Date value) {
            addCriterion("SWITCH_TIME <", value, "switchTime");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeLessThanOrEqualTo(Date value) {
            addCriterion("SWITCH_TIME <=", value, "switchTime");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeIn(List<Date> values) {
            addCriterion("SWITCH_TIME in", values, "switchTime");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeNotIn(List<Date> values) {
            addCriterion("SWITCH_TIME not in", values, "switchTime");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeBetween(Date value1, Date value2) {
            addCriterion("SWITCH_TIME between", value1, value2, "switchTime");
            return (Criteria) this;
        }

        public Criteria andSwitchTimeNotBetween(Date value1, Date value2) {
            addCriterion("SWITCH_TIME not between", value1, value2, "switchTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ci_event_fire
     *
     * @mbg.generated do_not_delete_during_merge Tue May 21 15:47:04 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ci_event_fire
     *
     * @mbg.generated Tue May 21 15:47:04 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}