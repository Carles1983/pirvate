package com.aii.crm.cache.web.persistence.bo;

import java.util.ArrayList;
import java.util.List;

public class ExceptionCodeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public ExceptionCodeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andExceptionCodeTypeIsNull() {
            addCriterion("EXCEPTION_CODE_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeIsNotNull() {
            addCriterion("EXCEPTION_CODE_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeEqualTo(String value) {
            addCriterion("EXCEPTION_CODE_TYPE =", value, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeNotEqualTo(String value) {
            addCriterion("EXCEPTION_CODE_TYPE <>", value, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeGreaterThan(String value) {
            addCriterion("EXCEPTION_CODE_TYPE >", value, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeGreaterThanOrEqualTo(String value) {
            addCriterion("EXCEPTION_CODE_TYPE >=", value, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeLessThan(String value) {
            addCriterion("EXCEPTION_CODE_TYPE <", value, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeLessThanOrEqualTo(String value) {
            addCriterion("EXCEPTION_CODE_TYPE <=", value, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeLike(String value) {
            addCriterion("EXCEPTION_CODE_TYPE like", value, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeNotLike(String value) {
            addCriterion("EXCEPTION_CODE_TYPE not like", value, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeIn(List<String> values) {
            addCriterion("EXCEPTION_CODE_TYPE in", values, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeNotIn(List<String> values) {
            addCriterion("EXCEPTION_CODE_TYPE not in", values, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeBetween(String value1, String value2) {
            addCriterion("EXCEPTION_CODE_TYPE between", value1, value2, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionCodeTypeNotBetween(String value1, String value2) {
            addCriterion("EXCEPTION_CODE_TYPE not between", value1, value2, "exceptionCodeType");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeIsNull() {
            addCriterion("EXCEPTION_PARENT_CODE is null");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeIsNotNull() {
            addCriterion("EXCEPTION_PARENT_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeEqualTo(String value) {
            addCriterion("EXCEPTION_PARENT_CODE =", value, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeNotEqualTo(String value) {
            addCriterion("EXCEPTION_PARENT_CODE <>", value, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeGreaterThan(String value) {
            addCriterion("EXCEPTION_PARENT_CODE >", value, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeGreaterThanOrEqualTo(String value) {
            addCriterion("EXCEPTION_PARENT_CODE >=", value, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeLessThan(String value) {
            addCriterion("EXCEPTION_PARENT_CODE <", value, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeLessThanOrEqualTo(String value) {
            addCriterion("EXCEPTION_PARENT_CODE <=", value, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeLike(String value) {
            addCriterion("EXCEPTION_PARENT_CODE like", value, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeNotLike(String value) {
            addCriterion("EXCEPTION_PARENT_CODE not like", value, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeIn(List<String> values) {
            addCriterion("EXCEPTION_PARENT_CODE in", values, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeNotIn(List<String> values) {
            addCriterion("EXCEPTION_PARENT_CODE not in", values, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeBetween(String value1, String value2) {
            addCriterion("EXCEPTION_PARENT_CODE between", value1, value2, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andExceptionParentCodeNotBetween(String value1, String value2) {
            addCriterion("EXCEPTION_PARENT_CODE not between", value1, value2, "exceptionParentCode");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("DESCRIPTION is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("DESCRIPTION is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("DESCRIPTION =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("DESCRIPTION <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("DESCRIPTION >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("DESCRIPTION <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("DESCRIPTION like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("DESCRIPTION not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("DESCRIPTION in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("DESCRIPTION not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("DESCRIPTION between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("DESCRIPTION not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andResKeyIsNull() {
            addCriterion("RES_KEY is null");
            return (Criteria) this;
        }

        public Criteria andResKeyIsNotNull() {
            addCriterion("RES_KEY is not null");
            return (Criteria) this;
        }

        public Criteria andResKeyEqualTo(String value) {
            addCriterion("RES_KEY =", value, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyNotEqualTo(String value) {
            addCriterion("RES_KEY <>", value, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyGreaterThan(String value) {
            addCriterion("RES_KEY >", value, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyGreaterThanOrEqualTo(String value) {
            addCriterion("RES_KEY >=", value, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyLessThan(String value) {
            addCriterion("RES_KEY <", value, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyLessThanOrEqualTo(String value) {
            addCriterion("RES_KEY <=", value, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyLike(String value) {
            addCriterion("RES_KEY like", value, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyNotLike(String value) {
            addCriterion("RES_KEY not like", value, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyIn(List<String> values) {
            addCriterion("RES_KEY in", values, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyNotIn(List<String> values) {
            addCriterion("RES_KEY not in", values, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyBetween(String value1, String value2) {
            addCriterion("RES_KEY between", value1, value2, "resKey");
            return (Criteria) this;
        }

        public Criteria andResKeyNotBetween(String value1, String value2) {
            addCriterion("RES_KEY not between", value1, value2, "resKey");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("STATE is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("STATE is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(String value) {
            addCriterion("STATE =", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(String value) {
            addCriterion("STATE <>", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(String value) {
            addCriterion("STATE >", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(String value) {
            addCriterion("STATE >=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThan(String value) {
            addCriterion("STATE <", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(String value) {
            addCriterion("STATE <=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLike(String value) {
            addCriterion("STATE like", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotLike(String value) {
            addCriterion("STATE not like", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateIn(List<String> values) {
            addCriterion("STATE in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<String> values) {
            addCriterion("STATE not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(String value1, String value2) {
            addCriterion("STATE between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(String value1, String value2) {
            addCriterion("STATE not between", value1, value2, "state");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exception_code
     *
     * @mbg.generated do_not_delete_during_merge Mon May 20 09:49:50 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table exception_code
     *
     * @mbg.generated Mon May 20 09:49:50 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}